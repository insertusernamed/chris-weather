<div class="container mt-4 mb-4">
    <button class="theme-settings-btn" onclick="toggleThemeModal()">
        <i class="fas fa-cog"></i>
    </button>

    <div id="themeModal" class="theme-modal" style="display: none;">
        <div class="theme-modal-content">
            <h3 class="theme-modal-title">Theme Settings</h3>
            <div class="theme-options">
                <button onclick="setTheme('auto')" class="theme-option" data-theme="auto">
                    <i class="fas fa-clock"></i> Auto (Time-based)
                </button>
                <button onclick="setTheme('light')" class="theme-option" data-theme="light">
                    <i class="fas fa-sun"></i> Light
                </button>
                <button onclick="setTheme('dark')" class="theme-option" data-theme="dark">
                    <i class="fas fa-moon"></i> Dark
                </button>
            </div>
        </div>
    </div>

    <script>
        document.body.className = '{{timeOfDay}}';
    </script>
    <div class="weather-card">
        <div class="card-body">
            <h2 class="weather-title">
                <i class="fa-solid fa-warehouse me-2"></i>
                Chris's Garage
            </h2>

            {{#if response}}
            <div class="current-temp text-center">
                <i class="fa-solid fa-temperature-high temp-icon"></i>
                <div class="temperature-value" role="text"
                    aria-label="Current temperature {{response.temperature}} degrees Celsius">
                    {{response.temperature}}Â°C
                </div>
                <div class="weather-subtitle">Current Temperature</div>
                <div class="comfort-description mt-2">{{response.comfort}}</div>
            </div>

            <div class="weather-details">
                <div class="detail-item" role="group" aria-label="Humidity information">
                    <i class="fa-solid fa-droplet detail-icon humidity-icon"></i>
                    <div class="detail-info">
                        <span class="detail-value">{{response.humidity}}%</span>
                        <span class="detail-label">Humidity</span>
                    </div>
                </div>

                <div class="detail-item" role="group" aria-label="Pressure information">
                    <i class="fa-solid fa-gauge-high detail-icon pressure-icon"></i>
                    <div class="detail-info">
                        <span class="detail-value">{{response.pressure}} mb</span>
                        <span class="detail-label">Pressure</span>
                    </div>
                </div>
            </div>

            <div class="update-time">
                <i class="fa-regular fa-clock"></i>
                Last updated: {{response.formattedDate}}
            </div>
            {{else}}
            <div class="text-center p-4">
                <i class="fas fa-exclamation-triangle text-warning mb-3" style="font-size: 3rem;"></i>
                <p class="mb-0 fs-5">No weather data available</p>
            </div>
            {{/if}}

            <div class="text-center mt-4">
                <button class="btn btn-secondary" onclick="toggleDebug()" aria-expanded="false">
                    <i class="fas fa-bug me-2"></i>Debug Info
                </button>
            </div>

            {{#if debug}}
            <div id="debugSection" class="debug-section" style="display: none;">
                <h4 class="text-muted mb-3 fs-6 fw-bold">Debug Information</h4>
                <pre class="mb-0"><code>{{debug}}</code></pre>
            </div>
            {{/if}}
        </div>
    </div>
</div>

<script>
    function toggleDebug() {
        const debug = document.getElementById('debugSection');
        const btn = document.querySelector('.btn-secondary');
        if (debug) {
            const isVisible = debug.style.display !== 'none';
            debug.style.display = isVisible ? 'none' : 'block';
            btn.setAttribute('aria-expanded', !isVisible);
        }
    }

    function initializeTheme() {
        const savedTheme = localStorage.getItem('theme') || 'auto';
        setTheme(savedTheme, false);

        // Set initial active state of buttons
        document.querySelectorAll('.theme-option').forEach(btn => {
            btn.classList.toggle('active', btn.dataset.theme === savedTheme);
        });

        // If theme is auto, apply the time-based class
        if (savedTheme === 'auto') {
            document.body.className = '{{timeOfDay}}';
        }
    }

    function setTheme(theme, save = true) {
        if (save) {
            localStorage.setItem('theme', theme);
        }

        if (theme === 'auto') {
            document.body.className = '{{timeOfDay}}';
        } else {
            document.body.className = theme;
        }

        // Update active state of buttons
        document.querySelectorAll('.theme-option').forEach(btn => {
            btn.classList.toggle('active', btn.dataset.theme === theme);
        });
    }

    function toggleThemeModal() {
        const modal = document.getElementById('themeModal');
        modal.style.display = modal.style.display === 'none' ? 'block' : 'none';
    }

    // Close modal when clicking outside
    window.onclick = function (event) {
        const modal = document.getElementById('themeModal');
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    }

    // Make sure to run after DOM is fully loaded
    document.addEventListener('DOMContentLoaded', initializeTheme);
</script>